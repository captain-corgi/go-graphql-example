# User types and inputs

type User {
  id: ID!
  email: String!
  name: String!
  createdAt: String! # TODO: Change to Time scalar when custom scalar marshaling is implemented
  updatedAt: String! # TODO: Change to Time scalar when custom scalar marshaling is implemented
}

type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

type UserEdge {
  node: User!
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

input CreateUserInput {
  email: String!
  name: String!
}

input UpdateUserInput {
  email: String
  name: String
}

type CreateUserPayload {
  user: User!
  errors: [Error!]
}

type UpdateUserPayload {
  user: User!
  errors: [Error!]
}

type DeleteUserPayload {
  success: Boolean!
  errors: [Error!]
}

type Error {
  message: String!
  field: String
  code: String
}
